"use strict";(self.webpackChunkbuda=self.webpackChunkbuda||[]).push([[659],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>y});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=r.createContext({}),l=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},p=function(e){var n=l(e.components);return r.createElement(c.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,c=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=l(t),m=i,y=u["".concat(c,".").concat(m)]||u[m]||d[m]||a;return t?r.createElement(y,s(s({ref:n},p),{},{components:t})):r.createElement(y,s({ref:n},p))}));function y(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,s=new Array(a);s[0]=m;var o={};for(var c in n)hasOwnProperty.call(n,c)&&(o[c]=n[c]);o.originalType=e,o[u]="string"==typeof e?e:i,s[1]=o;for(var l=2;l<a;l++)s[l]=t[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},5995:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>a,metadata:()=>o,toc:()=>l});var r=t(7462),i=(t(7294),t(3905));const a={},s="Dependency Inversion Principle (DIP)",o={unversionedId:"SOLID/dependency_inversion_principle/README",id:"SOLID/dependency_inversion_principle/README",title:"Dependency Inversion Principle (DIP)",description:"What is this?",source:"@site/docs/SOLID/dependency_inversion_principle/README.md",sourceDirName:"SOLID/dependency_inversion_principle",slug:"/SOLID/dependency_inversion_principle/",permalink:"/docs/SOLID/dependency_inversion_principle/",draft:!1,editUrl:"https://github.com/RodrigoRVSN/buda/docs/SOLID/dependency_inversion_principle/README.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\ud83c\udfdb SOLID",permalink:"/docs/SOLID/"},next:{title:"Interface Segregation Principle (ISP)",permalink:"/docs/SOLID/interface_segregation_principle/"}},c={},l=[{value:"What is this?",id:"what-is-this",level:2},{value:"Why?",id:"why",level:2},{value:"Examples (JS)",id:"examples-js",level:2},{value:"Bad example",id:"bad-example",level:3},{value:"Good example",id:"good-example",level:3}],p={toc:l},u="wrapper";function d(e){let{components:n,...t}=e;return(0,i.kt)(u,(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"dependency-inversion-principle-dip"},"Dependency Inversion Principle (DIP)"),(0,i.kt)("h2",{id:"what-is-this"},"What is this?"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"This principle say: ")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Depend on abstractions, not implementations")),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"why"},"Why?"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"We need to create specific interfaces instead a generic interface"),(0,i.kt)("li",{parentName:"ul"},"With specific interfaces, the classes do not require useless information")),(0,i.kt)("h2",{id:"examples-js"},"Examples (JS)"),(0,i.kt)("h3",{id:"bad-example"},"Bad example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'class InventoryRequester {\n  constructor() {\n    this.REQ_METHODS = ["HTTP"];\n  }\n\n  requestItem(item) {\n    // ...\n  }\n}\n\nclass InventoryTracker {\n  constructor(items) {\n    this.items = items;\n\n    // We have created a dependency on a specific request implementation.\n    this.requester = new InventoryRequester();\n  }\n\n  requestItems() {\n    this.items.forEach(item => {\n      this.requester.requestItem(item);\n    });\n  }\n}\n\nconst inventoryTracker = new InventoryTracker(["apples", "bananas"]);\ninventoryTracker.requestItems();\n')),(0,i.kt)("h3",{id:"good-example"},"Good example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'class InventoryTracker {\n  constructor(items, requester) {\n    this.items = items;\n    this.requester = requester;\n  }\n\n  requestItems() {\n    this.items.forEach(item => {\n      this.requester.requestItem(item);\n    });\n  }\n}\n\nclass InventoryRequesterV1 {\n  constructor() {\n    this.REQ_METHODS = ["HTTP"];\n  }\n\n  requestItem(item) {\n    // ...\n  }\n}\n\nclass InventoryRequesterV2 {\n  constructor() {\n    this.REQ_METHODS = ["WS"];\n  }\n\n  requestItem(item) {\n    // ...\n  }\n}\n\n/* Constructing our dependencies externally and injecting them, we can easily substitute our request module for another */\nconst inventoryTracker = new InventoryTracker(\n  ["apples", "bananas"],\n  new InventoryRequesterV2()\n);\ninventoryTracker.requestItems();\n')))}d.isMDXComponent=!0}}]);