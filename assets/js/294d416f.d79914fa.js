"use strict";(self.webpackChunkbuda=self.webpackChunkbuda||[]).push([[386],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>m});var o=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,o,a=function(e,t){if(null==e)return{};var r,o,a={},n=Object.keys(e);for(o=0;o<n.length;o++)r=n[o],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(o=0;o<n.length;o++)r=n[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=o.createContext({}),c=function(e){var t=o.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=c(e.components);return o.createElement(l.Provider,{value:t},e.children)},p="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var r=e.components,a=e.mdxType,n=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(r),d=a,m=p["".concat(l,".").concat(d)]||p[d]||h[d]||n;return r?o.createElement(m,i(i({ref:t},u),{},{components:r})):o.createElement(m,i({ref:t},u))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var n=r.length,i=new Array(n);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:a,i[1]=s;for(var c=2;c<n;c++)i[c]=r[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,r)}d.displayName="MDXCreateElement"},4818:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>n,metadata:()=>s,toc:()=>c});var o=r(7462),a=(r(7294),r(3905));const n={},i="Bread First Search",s={unversionedId:"books/grooking_algorithms/Bread-First-Search/README",id:"books/grooking_algorithms/Bread-First-Search/README",title:"Bread First Search",description:"- Queues are FIFO (First In First Out)",source:"@site/docs/books/grooking_algorithms/6-Bread-First-Search/README.md",sourceDirName:"books/grooking_algorithms/6-Bread-First-Search",slug:"/books/grooking_algorithms/Bread-First-Search/",permalink:"/docs/books/grooking_algorithms/Bread-First-Search/",draft:!1,editUrl:"https://github.com/RodrigoRVSN/buda/docs/books/grooking_algorithms/6-Bread-First-Search/README.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Hash Tables",permalink:"/docs/books/grooking_algorithms/Hash-Tables/"},next:{title:"Dijkstra",permalink:"/docs/books/grooking_algorithms/Dijkstra/"}},l={},c=[],u={toc:c},p="wrapper";function h(e){let{components:t,...r}=e;return(0,a.kt)(p,(0,o.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"bread-first-search"},"Bread First Search"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Queues are FIFO (First In First Out)"),(0,a.kt)("li",{parentName:"ul"},"Stacks are LIFO (Last In First Out)"),(0,a.kt)("li",{parentName:"ul"},"Breadth-first Search tells you if there's a path from A to B, if has a path, this search will tell you the ",(0,a.kt)("strong",{parentName:"li"},"shortest path")),(0,a.kt)("li",{parentName:"ul"},"A directed graph has arrows and the relationship follows the arrow direction"),(0,a.kt)("li",{parentName:"ul"},"A undirected graph doesnt has arrows and the relationship goes both ways"),(0,a.kt)("li",{parentName:"ul"},"To find the shortest path, you need to check the elements in the order they are added to the search list. Because of this, we need to use a Queue"),(0,a.kt)("li",{parentName:"ul"},"Mark the viewed itens to not get a infinite loop")))}h.isMDXComponent=!0}}]);