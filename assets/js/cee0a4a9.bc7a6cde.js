"use strict";(self.webpackChunkbuda=self.webpackChunkbuda||[]).push([[550],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>f});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var a=n.createContext({}),c=function(e){var t=n.useContext(a),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(a.Provider,{value:t},e.children)},p="mdxType",b={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,a=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(r),d=i,f=p["".concat(a,".").concat(d)]||p[d]||b[d]||o;return r?n.createElement(f,l(l({ref:t},u),{},{components:r})):n.createElement(f,l({ref:t},u))}));function f(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,l=new Array(o);l[0]=d;var s={};for(var a in t)hasOwnProperty.call(t,a)&&(s[a]=t[a]);s.originalType=e,s[p]="string"==typeof e?e:i,l[1]=s;for(var c=2;c<o;c++)l[c]=r[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},2712:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>a,contentTitle:()=>l,default:()=>b,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var n=r(7462),i=(r(7294),r(3905));const o={},l="Liskov Substitution Principle (LSP)",s={unversionedId:"SOLID/liskov_substitution_principle/README",id:"SOLID/liskov_substitution_principle/README",title:"Liskov Substitution Principle (LSP)",description:"What is this?",source:"@site/docs/SOLID/liskov_substitution_principle/README.md",sourceDirName:"SOLID/liskov_substitution_principle",slug:"/SOLID/liskov_substitution_principle/",permalink:"/buda/docs/SOLID/liskov_substitution_principle/",draft:!1,editUrl:"https://github.com/RodrigoRVSN/buda/docs/SOLID/liskov_substitution_principle/README.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Interface Segregation Principle (ISP)",permalink:"/buda/docs/SOLID/interface_segregation_principle/"},next:{title:"Open-closed principle (OCP)",permalink:"/buda/docs/SOLID/open_closed_principle/"}},a={},c=[{value:"What is this?",id:"what-is-this",level:2},{value:"Why?",id:"why",level:2}],u={toc:c},p="wrapper";function b(e){let{components:t,...r}=e;return(0,i.kt)(p,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"liskov-substitution-principle-lsp"},"Liskov Substitution Principle (LSP)"),(0,i.kt)("h2",{id:"what-is-this"},"What is this?"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"This principle say: ")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"The subclasses should be replaceable by the base classes"),"."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The class extends the behavior, but never reduce the behavior from the father.")),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"why"},"Why?"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The subclasses should be able to implement behaviors from the father class.")))}b.isMDXComponent=!0}}]);